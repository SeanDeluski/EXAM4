import sys
from collections import defaultdict

def find_substrings(sequence, k):
    """
    Find all substrings of size k and their subsequent substrings.

    Args:
    sequence (str): The input sequence.
    k (int): The size of substrings to search for.

    Returns:
    dict: A dictionary where keys are substrings and values are lists of subsequent substrings.
    """
    substrings = defaultdict(list)
    for i in range(len(sequence) - k):
        substring = sequence[i:i+k]
        next_substring = sequence[i+1:i+k+1]
        substrings[substring].append(next_substring)
    return substrings

def find_all_substrings(filename, k):
    """
    Find all possible substrings and their subsequent substrings for all sequences read from a file.

    Args:
    filename (str): The name of the file containing sequence fragments.
    k (int): The size of substrings to search for.

    Returns:
    dict: A dictionary containing substrings and their subsequent substrings for all sequences.
    """
    all_substrings = defaultdict(list)
    with open(filename, 'r') as file:
        sequence = ""
        for line in file:
            if line.startswith(">"):
                if sequence:
                    substrings = find_substrings(sequence, k)
                    for key, value in substrings.items():
                        all_substrings[key].extend(value)
                sequence = ""
            else:
                sequence += line.strip()
        if sequence:
            substrings = find_substrings(sequence, k)
            for key, value in substrings.items():
                all_substrings[key].extend(value)
    return all_substrings

def find_smallest_k(filename):
    """
    Identify the smallest value of k where every substring has only one possible subsequent substring.

    Args:
    filename (str): The name of the file containing sequence fragments.

    Returns:
    int: The smallest value of k.
    """
    k = 1
    while True:
        substrings = find_all_substrings(filename, k)
        unique_next_substrings = {substring: set(next_substrings) for substring, next_substrings in substrings.items()}
        if all(len(next_substrings) == 1 for next_substrings in unique_next_substrings.values()):
            return k
        k += 1

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python script.py ../../shared/439539/reads.fa")
        sys.exit(1)
    
    filename = sys.argv[1]
    smallest_k = find_smallest_k(filename)
    print("Smallest value of k:", smallest_k)
